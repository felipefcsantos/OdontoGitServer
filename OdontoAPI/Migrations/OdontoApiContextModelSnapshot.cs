// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OdontoAPI.Data;

#nullable disable

namespace OdontoAPI.Migrations
{
    [DbContext(typeof(OdontoApiContext))]
    partial class OdontoApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OdontoAPI.Models.Dentista", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Atendendo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cro")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<bool>("Domingo")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Orcamento")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Quarta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Quinta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sabado")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Segunda")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Sexta")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Terceira")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdUsuario");

                    b.ToTable("Dentistas");
                });

            modelBuilder.Entity("OdontoAPI.Models.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("IdEndereco");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("OdontoAPI.Models.FormaPgto", b =>
                {
                    b.Property<int>("IdFormaDePagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Taxa")
                        .HasColumnType("double");

                    b.HasKey("IdFormaDePagamento");

                    b.ToTable("FormaPgtos");
                });

            modelBuilder.Entity("OdontoAPI.Models.Orcamento", b =>
                {
                    b.Property<int>("IdOrcamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Desconto")
                        .HasColumnType("double");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("IdOrcamento");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("OdontoAPI.Models.Pagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("FormaPgtoIdFormaDePagamento")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaDePagamento")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("IdPagamento");

                    b.HasIndex("FormaPgtoIdFormaDePagamento");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("OdontoAPI.Models.Sala", b =>
                {
                    b.Property<int>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("IdTipoSala")
                        .HasColumnType("int");

                    b.Property<string>("NomeSala")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TipoSalaIdTipoSala")
                        .HasColumnType("int");

                    b.HasKey("IdSala");

                    b.HasIndex("TipoSalaIdTipoSala");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("OdontoAPI.Models.TipoSala", b =>
                {
                    b.Property<int>("IdTipoSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdTipoSala");

                    b.ToTable("TipoSalas");
                });

            modelBuilder.Entity("OdontoAPI.Models.TipoTratamento", b =>
                {
                    b.Property<int>("IdTipoTratamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("varchar(250)");

                    b.Property<int>("TempoEstimado")
                        .HasColumnType("int");

                    b.Property<double>("Valor")
                        .HasColumnType("double");

                    b.HasKey("IdTipoTratamento");

                    b.ToTable("TipoTratamentos");
                });

            modelBuilder.Entity("OdontoAPI.Models.Tratamento", b =>
                {
                    b.Property<int>("IdTratamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdTipoTratamento")
                        .HasColumnType("int");

                    b.Property<int>("TipoTratamentoIdTipoTratamento")
                        .HasColumnType("int");

                    b.HasKey("IdTratamento");

                    b.HasIndex("TipoTratamentoIdTipoTratamento");

                    b.ToTable("Tratamentos");
                });

            modelBuilder.Entity("OdontoAPI.Models.Pagamento", b =>
                {
                    b.HasOne("OdontoAPI.Models.FormaPgto", "FormaPgto")
                        .WithMany("Pagamentos")
                        .HasForeignKey("FormaPgtoIdFormaDePagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaPgto");
                });

            modelBuilder.Entity("OdontoAPI.Models.Sala", b =>
                {
                    b.HasOne("OdontoAPI.Models.TipoSala", "TipoSala")
                        .WithMany("Salas")
                        .HasForeignKey("TipoSalaIdTipoSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoSala");
                });

            modelBuilder.Entity("OdontoAPI.Models.Tratamento", b =>
                {
                    b.HasOne("OdontoAPI.Models.TipoTratamento", "TipoTratamento")
                        .WithMany("Tratamentos")
                        .HasForeignKey("TipoTratamentoIdTipoTratamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoTratamento");
                });

            modelBuilder.Entity("OdontoAPI.Models.FormaPgto", b =>
                {
                    b.Navigation("Pagamentos");
                });

            modelBuilder.Entity("OdontoAPI.Models.TipoSala", b =>
                {
                    b.Navigation("Salas");
                });

            modelBuilder.Entity("OdontoAPI.Models.TipoTratamento", b =>
                {
                    b.Navigation("Tratamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
